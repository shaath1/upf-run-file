apiVersion: kubevirt.io/v1alpha3
kind: VirtualMachine
metadata:
  name: upf
spec:
  running: true
  template:
    metadata:
      labels:
        kubevirt.io/name: f5xc-vm
        vmi: upf
    spec:
      domain:
        cpu:
          sockets: 1
          cores: 2 
        memory:
          guest: "2G"
        devices:
          autoattachPodInterface: true # true by default, explicitly setting for clarity
          disks:
          - name: bootdisk
            disk:
              bus: virtio
          - name: cloud-init
            disk:
              bus: virtio
          - name: upf-cfg
            serial: upfconfigmap
          interfaces:
          - name: default
            masquerade: {}
          - name: multus-n3 
            bridge: {}
          - name: multus-n6
            bridge: {}            
      terminationGracePeriodSeconds: 0
      networks:
      - name: default
        pod: {}
      - multus:
          networkName: upf-n3
        name: multus-n3 
      - multus:
          networkName: upf-n6
        name: multus-n6
      volumes:
      - name: bootdisk
        containerDisk:
          image: mcas/kubevirt-ubuntu-20.04:latest
      - name: cloud-init      
        cloudInitNoCloud:
            userData: |-
             #cloud-config
             password: ubuntu
             chpasswd: { expire: False }
             ssh_authorized_keys:
             - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC8w6XIlwkNCMQgYy2xxRII7mHGYdpBfA/AqidcbKNv74NOMsyoXGF6TcJytCYd3XX+g5HvYFqXiK94YjrlIGMixfc12IEkX1ANMyF/B4UNHGMNCoCWF7qcjDLESk3aVDP5HtDpuxfKHkYtm68VERlluTLqnwaDUcniaZ//p7UjN3lVoKKUoShBuiDoG2YZkfnDTCohHN2ZNPsydg+NBdg6lM5GhgQfKDDKqOzD/CjhPQeKoiOJFm1ObnjbDAXA0yYfVR8W0fxxXel6Pe70TrcoUxZKzYZG8vsy2zEZc7vdRhlzLlIIN9TvjR3EwmB3GlevGfh726WAj3bV/fuPpQof a.cheng@f5.com
             package_update: false
             package_upgrade: false
             packages:
             runcmd:
             - [ systemctl, start, qemu-guest-agent ]  
            bootcmd:
              # Mount the ConfigMap
              - "sudo mkdir /tmp/upfcfg"
              - "sudo mount /dev/disk/by-id/ata-QEMU_HARDDISK_upfconfigmap /tmp/upfcfg"
            package_update: true
            packages:
              - git
              - gcc
              - g++
              - cmake
              - autoconf
              - libtool
              - pkg-config
              - libmnl-dev
              - libyaml-dev
            snap:
              commands:
                00: snap install go --classic --channel=1.18/stable
            runcmd:
              - sysctl -w net.ipv4.ip_forward=1 ; iptables -t nat -A POSTROUTING -o enp1s0 -j MASQUERADE ; iptables -A FORWARD -p tcp -m tcp --tcp-flags SYN,RST SYN -j TCPMSS --set-mss 1400 ; systemctl stop ufw
              - cd /opt ; git clone -b v0.8.2 https://github.com/free5gc/gtp5g.git ; cd gtp5g ; make ; make install
              - cd /opt ; git clone --recursive -b v3.3.0 -j `nproc` https://github.com/free5gc/free5gc.git ; cd free5gc ; su root -c 'make upf'
              - sudo cd /etc
              - sudo curl -O https://raw.githubusercontent.com/shaath1/upf-run-file/main/upf.yaml
              - sudo curl -O https://raw.githubusercontent.com/shaath1/upf-run-file/main/modify_upfcfg.sh
              - sudo ./modify_upfcfg.sh
              - /opt/free5gc/bin/upf -c /etc/upfcfg.yaml &
          networkData: |
            network:
              version: 1
              config:
              - type: physical
                name: enp1s0
                subnets:
                  - type: dhcp
              - type: physical
                name: enp2s0
                subnets:
                  - type: dhcp
              - type: physical
                name: enp3s0
                subnets:
                  - type: dhcp
                    
      - name: upf-cfg
        configMap:
          name: upf-configmap
---
apiVersion: v1
kind: Service
metadata:
  name: upf-service #make sure smf point to right service name in their configmap file
spec:
  ports:
  - port: 22
    name: ssh
    protocol: TCP
    targetPort: 22
  - port: 80
    name: http
    protocol: TCP
    targetPort: 80
  - port: 8805
    name: upf
    protocol: UDP
    targetPort: 8805
  selector:
    vmi: upf
